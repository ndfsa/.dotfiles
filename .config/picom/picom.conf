#################################
#             Shadows           #
#################################

shadow = false;

#################################
#           Fading              #
#################################
fading = true
fade-in-step = 0.03;
fade-out-step = 0.03;

#################################
#   Transparency / Opacity      #
#################################

frame-opacity = 0.1;

active-opacity = 1.0;
inactive-opacity = 0.8;
inactive-opacity-override = false;

focus-exclude = [ 
	"class_g = 'Chromium'",
	"class_g = 'Gimp'"
 ];

opacity-rule = [
#	"95:class_g = 'kitty' && focused",
#	"60:class_g = 'kitty' && !focused"
];

#################################
#     Background-Blurring       #
#################################
blur-method = "gaussian";
blur-size = 9;
blur-deviation = 7;
# Bad in performance, with driver-dependent behavior. The name may change.
#blur-background-frame = true;
blur-background = true;
#blur-kern = "11x11gaussian";
#blur:
#{
#    method = "dual_kawase";
#    strength = 8;
#}
# Exclude conditions for background blur.
# blur-background-exclude = []
blur-background-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'",
  "_GTK_FRAME_EXTENTS@:c"
];

#################################
#       General Settings        #
#################################

wintypes:
{
  tooltip = { fade = true; shadow = false; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; opacity = 0.80; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 1.0; }
  dropdown_menu = { opacity = 1.0; }
};

# daemon = false
backend = "glx";
# backend = "xrender";
#glx-no-stencil = true;
#glx-no-rebind-pixmanp = true;
vsync = true;
# Try to detect WM windows (a non-override-redirect window with no 
# child that has 'WM_STATE') and mark them as active.
# mark-wmwin-focused = false
mark-wmwin-focused = true;

# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.
# mark-ovredir-focused = false
#mark-ovredir-focused = true;

# Try to detect windows with rounded corners and don't consider them 
# shaped windows. The accuracy is not very high, unfortunately.
detect-rounded-corners = true;

# Detect '_NET_WM_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_OPACITY' of client windows to frame windows.
detect-client-opacity = true;

# Specify refresh rate of the screen. If not specified or 0, picom will 
# try detecting this with X RandR extension.
refresh-rate = 0

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows 
# in the same group focused at the same time.
detect-transient = true

# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same 
# group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if 
# detect-transient is enabled, too.
detect-client-leader = true

# Disable the use of damage information. 
# This cause the whole screen to be redrawn everytime, instead of the part of the screen
# has actually changed. Potentially degrades the performance, but might fix some artifacts.
# The opposing option is use-damage
use-damage = false;

# Set the log level. Possible values are:
#  "trace", "debug", "info", "warn", "error"
# in increasing level of importance. Case doesn't matter. 
# If using the "TRACE" log level, it's better to log into a file 
# using *--log-file*, since it can generate a huge stream of logs.
log-level = "error";
